plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
jacoco {
    toolVersion = "0.8.7"  //jacoco
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    //jwt 관련 의존성
    implementation 'com.auth0:java-jwt:3.19.2'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    //mysql
    runtimeOnly 'mysql:mysql-connector-java:8.0.27'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-crypto'
    //swagger ui
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    testImplementation 'org.springframework.security:spring-security-test'
    //쿼리 dsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

}
//쿼리 dsl

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}


//jacoco 설정
jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // 테스트가 끝난 후 JaCoCo 리포트를 생성하도록 설정
}



tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:-options"
}
tasks.named('test') {
    useJUnitPlatform()
}


//plugins {
//    id 'java'
//    id 'org.springframework.boot' version '3.2.5'
//    id 'io.spring.dependency-management' version '1.1.4'
//}
//
//group = 'org.example'
//version = '0.0.1-SNAPSHOT'
//
//java {
//    sourceCompatibility = '17'
//}
//
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
//    //jwt
//    implementation 'com.auth0:java-jwt:3.19.2'
//    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
//    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
//    //시큐리티
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.security:spring-security-crypto'
//}
//
//tasks.named('test') {
//    useJUnitPlatform()
//}
