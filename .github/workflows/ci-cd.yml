name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Verify Java version
        run: java -version

      - name: Create databases
        run: |
          mysql -h127.0.0.1 -uroot -p${{ secrets.DB_ROOT_PASSWORD }} -e 'CREATE DATABASE IF NOT EXISTS creww;'
          mysql -h127.0.0.1 -uroot -p${{ secrets.DB_ROOT_PASSWORD }} -e 'CREATE DATABASE IF NOT EXISTS testdb;'
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon --no-build-cache
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: creww

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: testdb

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: true
          verbose: true

      - name: Build Docker image
        run: docker build -t thunder0902/creww-backend:test .

      - name: Log in to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push thunder0902/creww-backend:test

      - name: Clean up Docker images
        run: docker rmi thunder0902/creww-backend:test

#name: CI/CD Pipeline
#on:
#  push:
#    branches:
#      - test-cicd
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 8
#        uses: actions/setup-java@v2
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#
#      - name: Verify Java version
#        run: java -version
#
#      - name: Build with Gradle
#        run: ./gradlew clean build --no-daemon --no-build-cache
#
#      - name: Build Docker image
#        run: docker build -t thunder0902/creww-backend:test .
#
#      - name: Log in to Docker Hub
#        env:
#          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
#        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
#
#      - name: Push Docker image
#        run: docker push thunder0902/creww-backend:test
#
#      - name: Clean up Docker images
#        run: docker rmi thunder0902/creww-backend:test
